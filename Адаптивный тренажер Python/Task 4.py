"""
Напишите функцию, которая для заданного натурального числа n генерирует последовательность чисел,
описанную в гипотезе Коллатца:
Если n четное, то делим его пополам, если нечётное, то умножаем на 3 и прибавляем 1.
С итогом вычисления снова проделываем эту операцию до тех пор, пока в результате не будет получено число 1.
Например, для числа n = 17 последовательность вычислений выглядит следующим образом:
17, 52, 26, 13, 40, 20, 10, 5, 16, 8, 4, 2, 1
Предполагается, что подобная последовательность остановится на числе 1 для любого начального натурального числа n.
Формат ввода:
Строка, содержащая единственное целое число n, n>0.
Формат вывода:
Строка, содержащая последовательность целых чисел, разделённых пробелом.

Sample Input 1:
17

Sample Output 1:
17 52 26 13 40 20 10 5 16 8 4 2 1

Sample Input 2:
1

Sample Output 2:
1
"""


def algorithm_collatz_rec(value):  # вариант через рекурсию
    print(value, end=" ")
    if value == 1:
        return
    elif value % 2 == 0:
        algorithm_collatz_rec(value // 2)
    else:
        algorithm_collatz_rec(value * 3 + 1)


def algorithm_collatz(value):  # вариант без рекурсии
    while value != 1:
        print(value, end=" ")
        if value % 2 == 0:
            value //= 2
        else:
            value = value * 3 + 1
    print(value)


number = int(input())
algorithm_collatz(number)
print("Через рекурсию:")
algorithm_collatz_rec(number)
